import "benzene.lt"       # <- defines the "Benzene" molecule type.
import "benzoic_acid.lt"  # <- defines the "BenzoicAcid" molecule type.


# Periodic boundary conditions:
write_once("Data Boundary") {
   0.0  48.00  xlo xhi
   0.0  48.00  ylo yhi
   0.0  48.00  zlo zhi
}


# Create 108 "Benzene" molecules and arrange them in a 6x6x3 cubic lattice with
# 8.0 Angstrom spacing in the x,y directions and 16 Anstrom spacing along Z.

benzenes = new Benzene[6].move(8.0, 0, 0)
                      [6].move(0, 8.0, 0)
                      [3].move(0, 0, 16.0)

# Create 108 "BenzoicAcid" molecules and arrange them in a 6x6x3 cubic lattice with
# 8.0 Angstrom spacing in the x,y directions and 16 Anstrom spacing along Z.

benzoic_acids = new BenzoicAcid[6].move(8.0, 0, 0)
                               [6].move(0, 8.0, 0)
                               [3].move(0, 0, 16.0)

# Now shift the positions of all of the BenzoicAcid molecules, 
# to reduce the chance that they overlap with the Benzene molecules.

benzoic_acids[*][*][*].move(4.0, 4.0, 6.0)



# Note1: You can use the "new random" command to create mixtures of different
#        molecule types containing an arbitrary number of molecules arranged on
#        a periodic lattice.  (This works if all molecules have similar size.)
#       See manual (ch8.9.1): https://moltemplate.org/doc/moltemplate_manual.pdf
# Note2: More generally you can use PACKMOL to create mixtures of molecules.
#       It allows us to omit the coordinates and .move() commands.  And you can
#       specify the number of molecules you want more precisely.  See example:
# https://github.com/jewettaij/moltemplate/tree/master/examples/all_atom/force_field_OPLSAA/ethylene+benzene_PACKMOL/
